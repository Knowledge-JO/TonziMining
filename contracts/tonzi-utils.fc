#include  "./params.fc";


cell pack_tonzi_wallet_data(int tonzi_minter_balance, slice owner_address, slice tonzi_factory_address, cell tonzi_wallet_code) inline {
   return begin_cell()
          .store_coins(tonzi_minter_balance)
          .store_slice(owner_address)
          .store_slice(tonzi_factory_address)
          .store_ref(tonzi_wallet_code)
        .end_cell();
    
}

cell calculate_tonzi_wallet_state_init(slice owner_address, slice tonzi_factory_address, cell tonzi_wallet_code) inline {
  return begin_cell()
            .store_uint(0, 2)
            .store_dict(tonzi_wallet_code)
            .store_dict(pack_tonzi_wallet_data(0,owner_address, tonzi_factory_address, tonzi_wallet_code))
            .store_uint(0, 1)
            .end_cell();
}

slice calculate_tonzi_wallet_address(cell state_init) inline {
  return begin_cell().store_uint(4, 3)
            .store_int(workchain(), 8)
            .store_uint(cell_hash(state_init), 256)
            .end_cell()
            .begin_parse();
}

slice calculate_user_tonzi_wallet_address(slice owner_address, slice tonzi_factory_address, cell tonzi_wallet_code) inline {
  return calculate_tonzi_wallet_address(calculate_tonzi_wallet_state_init(owner_address, tonzi_factory_address, tonzi_wallet_code));
}

int calculate_tonzi_miner(int deposit_amount, int total_value_locked, int tonzi_miner_market) {
  int tonziPrice = (deposit_amount / ( deposit_amount + total_value_locked)) * tonzi_miner_market;
  return tonziPrice;
}